



jwt.secret=javainuse



spring.datasource.url=jdbc:mysql://****.cjbtbpbcwcrj.us-east-2.rds.amazonaws.com:3306/bootdb?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
spring.datasource.username=************************
spring.datasource.password= ******************************************
spring.datasource.platform=mysql

spring.jpa.hibernate.ddl-auto=update




#mail properties

spring.mail.host=smtp.gmail.com
spring.mail.port=587



spring.mail.username=************************
spring.mail.password=**********************

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory




jsa.aws.access_key_id=*****************    
jsa.aws.secret_access_key=***************
jsa.s3.bucket=****************
jsa.s3.region=***********************

#file

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=300MB
# Max Request Size
spring.servlet.multipart.max-request-size=315MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=**************************
